#ifndef ACCOUNT_HPP
#define ACCOUNT_HPP

#include <cstdint>
#include <string>

class Account{
      private:
            std::uint64_t CustomerID;   // should be generated by bank // unsigned integer of 64-bits
            std::string account_number;     // should be generated by bank
            std::string branch_address;   // set by the bank branch
            int branch_code;
            double account_balance;
            std::string account_password;
            // take permanent address from the customer class
            // take phone number from the customer class
            // take email address from the customer class

      public:
            Account(std::uint64_t CustID, std::string &acc_pass, double initial_balance = 0.0);

            // getters
            // std::string get_name() const;
            // std::string get_phone_no() const;
            // std::string get_mail() const;
            std::uint64_t get_customer_ID() const;
            std::string get_account_number() const;
            std::string get_branch_addr() const;
            int get_branch_code() const;
            double get_balance() const;
            bool verify_acc_pass(const std::string& input_pass) const;

            // setters
            void set_branch_info(std::string branch_add, int code);
            void deposit(double amount);
            bool withdraw(double amount);
};

void account_lonin(void);
void add_account(void);
void delete_account(void);
// make sure acc no is valid before deleting
// make sure no money in acc
// if present alert the acc holder

#endif